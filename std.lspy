;;; Atoms
(def {nil} {})
(def {true} 1)
(def {otherwise} 1)
(def {false} 0)

;;; Function definition
(def {fun} (\ {f b} {
    def (head f) (\ (tail f) b)
}))

;;; Logical functions
(fun {not b} {- 1 b})
(fun {or a b} {+ a b})
(fun {and a b} {* a b})

;;; List functions
(fun {first l} {
    eval (head l)
})

(fun {second l} {
    first (tail l)
})

(fun {map f l} {
    if (== l nil) 
        {nil} 
        {join (list (f (first l))) (map f (tail l))}
})

(fun {foldr f acc l} {
    if (== l nil)
        {acc}
        {f (first l) (foldr f acc (tail l))}
})

(fun {filter f l} {
    if (== l nil)
        {nil}
        {
            join (if (f (first l))
                    {head l}
                    {nil}
                )
                (filter f (tail l))
        }
})

(fun {sum l} {
    foldr (\ {x total} {+ x total}) 0 l
})

;;; Conditional functions
(fun {select & cs} {
    second (
        first (
            filter first cs
        )
    )
})

;;; Misc
(fun {range a b} {
    if (== a b) 
        {{}}
        {join (list a) (range (+ a 1) b)}
})

(fun {fib n} {
    select
        {(== n 0) 1}
        {(== n 1) 1}
        {otherwise (+ (fib (- n 1)) (fib (- n 2)))}
})
